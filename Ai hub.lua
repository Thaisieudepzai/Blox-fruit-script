-- Auto Hop & L∆∞u Tr·ªØ √Åc Qu·ª∑ - Storage System
if _G.DevilFruitStorage then return end
_G.DevilFruitStorage = true

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("üçé Devil Fruit Storage", "DarkTheme")

-- Bi·∫øn to√†n c·ª•c
getgenv().AutoHop = false
getgenv().AutoCollect = false
getgenv().AutoStore = false
getgenv().Notify = true
getgenv().HopDelay = 30

-- H·ªá th·ªëng l∆∞u tr·ªØ
getgenv().FruitStorage = {
    CollectedFruits = {},
    TotalCollected = 0,
    LastFound = "",
    StorageFile = "DevilFruitData.json"
}

-- GUI Status Window (C√≥ th·ªÉ k√©o)
local StatusGUI = Instance.new("ScreenGui")
local StatusFrame = Instance.new("Frame")
local StatusLabel = Instance.new("TextLabel")
local DragFrame = Instance.new("Frame")

-- T·∫°o GUI
StatusGUI.Name = "DevilFruitStorageStatus"
StatusGUI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

StatusFrame.Name = "StatusFrame"
StatusFrame.Parent = StatusGUI
StatusFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
StatusFrame.BorderSizePixel = 2
StatusFrame.BorderColor3 = Color3.fromRGB(0, 255, 0)
StatusFrame.Position = UDim2.new(0.02, 0, 0.02, 0)
StatusFrame.Size = UDim2.new(0, 350, 0, 150)
StatusFrame.Active = true
StatusFrame.Draggable = true

-- Drag Frame
DragFrame.Name = "DragFrame"
DragFrame.Parent = StatusFrame
DragFrame.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
DragFrame.BorderSizePixel = 0
DragFrame.Position = UDim2.new(0, 0, 0, 0)
DragFrame.Size = UDim2.new(1, 0, 0, 20)

StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = StatusFrame
StatusLabel.BackgroundTransparency = 1
StatusLabel.Position = UDim2.new(0, 10, 0, 25)
StatusLabel.Size = UDim2.new(1, -20, 1, -30)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Text = "üçé DEVIL FRUIT STORAGE\nüî¥ OFFLINE\nT·ªïng tr√°i: 0"
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.TextSize = 14
StatusLabel.TextWrapped = true
StatusLabel.TextXAlignment = Enum.TextXAlignment.Left
StatusLabel.TextYAlignment = Enum.TextYAlignment.Top

-- L∆∞u d·ªØ li·ªáu
local function SaveStorage()
    pcall(function()
        local data = {
            CollectedFruits = getgenv().FruitStorage.CollectedFruits,
            TotalCollected = getgenv().FruitStorage.TotalCollected,
            LastFound = getgenv().FruitStorage.LastFound
        }
        writefile(getgenv().FruitStorage.StorageFile, game:GetService("HttpService"):JSONEncode(data))
    end)
end

-- Load d·ªØ li·ªáu
local function LoadStorage()
    pcall(function()
        if isfile(getgenv().FruitStorage.StorageFile) then
            local data = game:GetService("HttpService"):JSONDecode(readfile(getgenv().FruitStorage.StorageFile))
            getgenv().FruitStorage.CollectedFruits = data.CollectedFruits or {}
            getgenv().FruitStorage.TotalCollected = data.TotalCollected or 0
            getgenv().FruitStorage.LastFound = data.LastFound or ""
        end
    end)
end

-- C·∫≠p nh·∫≠t tr·∫°ng th√°i
local function UpdateStatus(message)
    StatusLabel.Text = "üçé DEVIL FRUIT STORAGE\n"..message.."\nT·ªïng tr√°i: "..getgenv().FruitStorage.TotalCollected
    if getgenv().Notify then
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "üçé Fruit Storage",
            Text = message:gsub("\n", " "),
            Duration = 5
        })
    end
end

-- Th√™m tr√°i v√†o kho
local function AddToStorage(fruitName)
    if not getgenv().FruitStorage.CollectedFruits[fruitName] then
        getgenv().FruitStorage.CollectedFruits[fruitName] = 0
    end
    getgenv().FruitStorage.CollectedFruits[fruitName] = getgenv().FruitStorage.CollectedFruits[fruitName] + 1
    getgenv().FruitStorage.TotalCollected = getgenv().FruitStorage.TotalCollected + 1
    getgenv().FruitStorage.LastFound = fruitName
    
    SaveStorage()
    
    return getgenv().FruitStorage.CollectedFruits[fruitName]
end

-- T√¨m tr√°i √°c qu·ª∑
local function FindDevilFruits()
    pcall(function()
        for _, item in pairs(workspace:GetChildren()) do
            if item:FindFirstChild("Handle") and (string.find(item.Name, "Fruit") or string.find(item.Name, "Demon")) then
                return item
            end
        end
    end)
    return nil
end

-- L∆∞u tr·ªØ tr√°i √°c qu·ª∑
local function StoreDevilFruit(fruit)
    pcall(function()
        -- M·ªü inventory
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("GetFruits")
        
        -- L∆∞u th√¥ng tin tr√°i
        local count = AddToStorage(fruit.Name)
        
        UpdateStatus("‚úÖ ƒê√É L∆ØU TR·ªÆ: "..fruit.Name.."\nS·ªë l∆∞·ª£ng: "..count.."\nT·ªïng: "..getgenv().FruitStorage.TotalCollected)
    end)
end

-- Auto Collect & Store
local function StartCollecting()
    while getgenv().AutoCollect do
        task.wait(2)
        local fruit = FindDevilFruits()
        if fruit then
            UpdateStatus("üéØ PH√ÅT HI·ªÜN: "..fruit.Name.."\nƒêang di chuy·ªÉn...")
            
            -- Teleport ƒë·∫øn tr√°i √°c qu·ª∑
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = fruit.Handle.CFrame
            
            -- Ch·ªù nh·∫∑t
            task.wait(3)
            
            -- T·ª± ƒë·ªông l∆∞u tr·ªØ
            if getgenv().AutoStore then
                StoreDevilFruit(fruit)
            else
                local count = AddToStorage(fruit.Name)
                UpdateStatus("‚úÖ ƒê√É NH·∫∂T: "..fruit.Name.."\nS·ªë l∆∞·ª£ng: "..count)
            end
        else
            UpdateStatus("üîç ƒêang t√¨m tr√°i √°c qu·ª∑...\nServer: "..game.JobId:sub(1, 8))
        end
    end
end

-- Auto Hop
local function StartAutoHop()
    while getgenv().AutoHop do
        task.wait(getgenv().HopDelay)
        
        if getgenv().AutoCollect then
            local fruit = FindDevilFruits()
            if not fruit then
                UpdateStatus("üîÑ Kh√¥ng t√¨m th·∫•y tr√°i\nƒêang ƒë·ªïi server...")
                
                -- Hop server
                local TeleportService = game:GetService("TeleportService")
                local PlaceId = game.PlaceId
                local Servers = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..PlaceId.."/servers/Public?sortOrder=Desc&limit=100"))
                
                for _, server in pairs(Servers.data) do
                    if server.playing < server.maxPlayers and server.id ~= game.JobId then
                        TeleportService:TeleportToPlaceInstance(PlaceId, server.id)
                        task.wait(5)
                        break
                    end
                end
            else
                UpdateStatus("üéØ ƒê√£ t√¨m th·∫•y: "..fruit.Name.."\nKh√¥ng c·∫ßn ƒë·ªïi server")
            end
        end
    end
end

-- MAIN TAB
local MainTab = Window:NewTab("Ch√≠nh")
local AutoSection = MainTab:NewSection("T·ª± ƒê·ªông")

AutoSection:NewToggle("Auto Hop Server", "T·ª± ƒë·ªông ƒë·ªïi server", function(state)
    getgenv().AutoHop = state
    if state then
        UpdateStatus("üü¢ AUTO HOP: B·∫¨T\nƒêang t√¨m server...")
        spawn(StartAutoHop)
    else
        UpdateStatus("üî¥ AUTO HOP: T·∫ÆT")
    end
end)

AutoSection:NewToggle("Auto Collect Fruit", "T·ª± ƒë·ªông nh·∫∑t tr√°i", function(state)
    getgenv().AutoCollect = state
    if state then
        UpdateStatus("üü¢ AUTO COLLECT: B·∫¨T\nƒêang qu√©t...")
        spawn(StartCollecting)
    else
        UpdateStatus("üî¥ AUTO COLLECT: T·∫ÆT")
    end
end)

AutoSection:NewToggle("Auto L∆∞u Tr·ªØ", "T·ª± ƒë·ªông l∆∞u v√†o kho", function(state)
    getgenv().AutoStore = state
    UpdateStatus("üíæ AUTO STORE: "..(state and "B·∫¨T" or "T·∫ÆT"))
end)

-- STORAGE TAB
local StorageTab = Window:NewTab("Kho Tr·ªØ")
local StorageSection = StorageTab:NewSection("Qu·∫£n L√Ω Kho")

StorageSection:NewButton("Xem Kho Tr·ªØ", "Hi·ªán t·∫•t c·∫£ tr√°i ƒë√£ l∆∞u", function()
    local storageText = "üì¶ KHO TR·ªÆ √ÅC QU·ª∂:\n"
    local hasFruits = false
    
    for fruitName, count in pairs(getgenv().FruitStorage.CollectedFruits) do
        storageText = storageText.."‚Ä¢ "..fruitName..": "..count.."\n"
        hasFruits = true
    end
    
    if not hasFruits then
        storageText = storageText.."‚ùå Ch∆∞a c√≥ tr√°i n√†o"
    end
    
    storageText = storageText.."\nT·ªîNG: "..getgenv().FruitStorage.TotalCollected.." tr√°i"
    
    UpdateStatus(storageText)
end)

StorageSection:NewButton("Xu·∫•t D·ªØ Li·ªáu", "Copy data sang clipboard", function()
    setclipboard(game:GetService("HttpService"):JSONEncode(getgenv().FruitStorage.CollectedFruits))
    UpdateStatus("üìã ƒê√£ copy d·ªØ li·ªáu\nv√†o clipboard!")
end)

StorageSection:NewButton("Reset Kho", "X√≥a to√†n b·ªô d·ªØ li·ªáu", function()
    getgenv().FruitStorage.CollectedFruits = {}
    getgenv().FruitStorage.TotalCollected = 0
    getgenv().FruitStorage.LastFound = ""
    SaveStorage()
    UpdateStatus("üóëÔ∏è ƒê√£ reset kho tr·ªØ!\nT·ªïng tr√°i: 0")
end)

-- SETTINGS TAB
local SettingsTab = Window:NewTab("C√†i ƒê·∫∑t")
local SettingsSection = SettingsTab:NewSection("T√πy Ch·ªânh")

SettingsSection:NewSlider("Th·ªùi gian ch·ªù (gi√¢y)", "Th·ªùi gian ch·ªù tr∆∞·ªõc khi hop", 120, 10, function(value)
    getgenv().HopDelay = value
    UpdateStatus("‚è∞ Th·ªùi gian ch·ªù: "..value.."s")
end)

SettingsSection:NewToggle("Th√¥ng b√°o", "Hi·ªán th√¥ng b√°o", function(state)
    getgenv().Notify = state
    UpdateStatus("üîî Th√¥ng b√°o: "..(state and "B·∫¨T" or "T·∫ÆT"))
end)

-- Kh·ªüi ƒë·ªông
LoadStorage()
UpdateStatus("üçé DEVIL FRUIT STORAGE\nƒê√£ kh·ªüi ƒë·ªông th√†nh c√¥ng!\nK√©o GUI ƒë·ªÉ di chuy·ªÉn\nT·ªïng tr√°i: "..getgenv().FruitStorage.TotalCollected)

-- Auto save m·ªói 5 ph√∫t
spawn(function()
    while task.wait(300) do
        SaveStorage()
        UpdateStatus("üíæ ƒê√£ auto save d·ªØ li·ªáu\nT·ªïng tr√°i: "..getgenv().FruitStorage.TotalCollected)
    end
end)
